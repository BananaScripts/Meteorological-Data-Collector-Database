name: CI development

on:
  push:
    branches:
      - development
      - Fix/*
      - Feat/*
  pull_request:
    branches:
      - main

jobs:
  Database:
    runs-on: ubuntu-latest

    #Build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configurar Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Instalar Dependências
      run: npm install            
    
    #Definindo Variáveis de Ambiente
    - name: Criar .env
      run: |
        echo 'DEPLOY_DIRECT_URL="postgresql://postgres.kwkjauwkoplxiioaqdwd:codeApiSeth%2301@aws-0-sa-east-1.pooler.supabase.com:6543/postgres?pgbouncer=true"' >> .env
        echo 'DEPLOY_URL="postgresql://postgres.kwkjauwkoplxiioaqdwd:codeApiSeth%2301@aws-0-sa-east-1.pooler.supabase.com:6543/postgres?pgbouncer=true"' >> .env
        echo 'DIRECT_URL="postgresql://postgres.otkrzedzgbwgywqjrgwq:codeApiSeth%2301@aws-0-us-west-1.pooler.supabase.com:6543/postgres?pgbouncer=true"' >> .env
        echo 'DATABASE_URL="postgresql://postgres.otkrzedzgbwgywqjrgwq:codeApiSeth%2301@aws-0-us-west-1.pooler.supabase.com:6543/postgres?pgbouncer=true"' >> .env
    
    #Executar Operações Relacionadas ao Banco de Dados
    - name: Executar Operações do BD
      run: |
        npm run DB &
        echo $! > server_pid.txt
    
    # Rodar Testes
    - name: Rodar Testes
      run: |
        # Extração  do nome da branch
        BRANCH_NAME=${GITHUB_REF#refs/heads/}

        echo "Nome da branch: $BRANCH_NAME"

        # Rodando testes de integração para PRs entre 'development' e 'main'
        if [[ "$GITHUB_BASE_REF" == "main" && "$GITHUB_HEAD_REF" == "Development" ]]; then
          echo "Rodando testes de integração da branch development para main"
          npx ts-node-dev -- src/__tests__/integration/**/*.ts

        # Rodando testes para a branch 'development'
        elif [[ "$BRANCH_NAME" == "Development" ]]; then
          echo "Rodando testes para branch development"
          npx ts-node-dev -- src/__tests__/unit/**/*.ts

        # Rodando testes para branches 'Fix/*' ou 'Feat/*'
        elif [[ "$BRANCH_NAME" == Feat/* ]] || [[ "$BRANCH_NAME" == Fix/* ]]; then
          FEATURE_TEST_DIR="src/__tests__/unit/tasks/${BRANCH_NAME//\//-}"
          echo "Verificando se os testes existem em: $FEATURE_TEST_DIR"
          
          # Verifica se o diretório de testes da feature existe
          if [ -d "$FEATURE_TEST_DIR" ]; then
            echo "Rodando testes para a branch $BRANCH_NAME em $FEATURE_TEST_DIR"
            npx ts-node-dev -- $FEATURE_TEST_DIR/**/*.ts
          else
            echo "Nenhum teste foi encontrado para $BRANCH_NAME. Finalizando."
            exit 1
          fi
        fi
    
    #Encerrando Servidor
    - name: Encerrar servidor
      run: kill $(cat server_pid.txt)